name: Recce CI Base Branch

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: recce-ci-base
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    # --- ✅ PASAR SECRETOS COMO VARIABLES DE ENTORNO DEL JOB ---
    # Esto hace que estén disponibles para todos los pasos
    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      # Define los esquemas aquí también si los usas en profiles.yml
      SNOWFLAKE_SCHEMA_DEV: 'DEV'
      SNOWFLAKE_SCHEMA_PROD: 'DBT_LGONZALEZ' # O tu schema de producción

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2 # Considera usar @v4
        with:
          python-version: "3.10.x" # Considera usar 3.11 si tus paquetes lo soportan

      - name: Install dependencies
        run: |
          pip install dbt-snowflake recce

      # --- ✅ AÑADIR ESTE PASO ---
      - name: Configure dbt profiles
        run: |
          mkdir -p ~/.dbt
          # Usa el secreto DBT_PROFILES_YML para crear el archivo
          # Este secreto DEBE contener las referencias a env_var()
          echo "${{ secrets.DBT_PROFILES_YML }}" > ~/.dbt/profiles.yml
          echo "profiles.yml created:"
          cat ~/.dbt/profiles.yml # Imprime el contenido para verificar
      # --- FIN DEL PASO AÑADIDO ---

      - name: Run DBT
        # Ya no necesita el 'env:' aquí porque las variables están a nivel de job
        run: |
          dbt deps
          # Usa 'prod' como target aquí porque este workflow corre en 'main'
          dbt seed --target prod
          dbt run --target prod
          dbt docs generate --target prod
        env:
          # (Opcional) Si quieres sobreescribir el target por defecto del profile
          DBT_TARGET: "prod" 

      - name: Upload DBT Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: target-prod # Nombra el artefacto para identificarlo como 'base'
          path: target/ # Sube todo el contenido de 'target/'
